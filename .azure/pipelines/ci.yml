# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - develop
    - feature/azure
  paths:
    exclude:
    - README.md
    - appveyor.yml
    - .travis.yml
    - lang/*

jobs:


- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'

  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: DotNetCoreInstaller@1
    displayName: install
    inputs:
      version: '2.2.300'

  - task: DotNetCoreCLI@2
    displayName: restore
    inputs:
      command: 'restore'
      projects: '$(solution)'
      arguments: '-c $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: build
    inputs:
      command: 'build'
      projects: '$(solution)'
      arguments: '-c $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: test
    inputs:
      command: 'test'
      testRunTitle: 'test'



- job: macOS
  pool:
    vmImage: 'macOS-10.14'

  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: DotNetCoreInstaller@1
    displayName: install
    inputs:
      version: '2.2.300'

  - task: DotNetCoreCLI@2
    displayName: restore
    inputs:
      command: 'restore'
      projects: '$(solution)'
      arguments: '-c $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: build
    inputs:
      command: 'build'
      projects: '$(solution)'
      arguments: '-c $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: test
    inputs:
      command: 'test'
      testRunTitle: 'test'



- job: Windows
  pool:
    vmImage: 'windows-latest'

  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: DotNetCoreInstaller@1
    displayName: install
    inputs:
      version: '2.2.300'

  - task: DotNetCoreCLI@2
    displayName: restore
    inputs:
      command: 'restore'
      projects: '$(solution)'
      arguments: '-c $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: build
    inputs:
      command: 'build'
      projects: '$(solution)'
      arguments: '-c $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: test
    inputs:
      command: 'test'
      testRunTitle: 'test'


  # - task: DotNetCoreCLI@2
  #   inputs:
  #     command: 'pack'
  #     packagesToPack: 'src/**/*.csproj'
  #     includesymbols: true
  #     versioningScheme: 'byBuildNumber'

  # - task: DotNetCoreCLI@2
  #   inputs:
  #     command: 'push'
  #     packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
  #     nuGetFeedType: 'external'
  #     publishFeedCredentials: 'nuget-sundot'
